// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.6.0
// source: number.proto

package number

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AddNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	First  int32 `protobuf:"varint,1,opt,name=First,proto3" json:"First,omitempty"`
	Second int32 `protobuf:"varint,2,opt,name=Second,proto3" json:"Second,omitempty"`
}

func (x *AddNumberRequest) Reset() {
	*x = AddNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_number_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNumberRequest) ProtoMessage() {}

func (x *AddNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_number_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNumberRequest.ProtoReflect.Descriptor instead.
func (*AddNumberRequest) Descriptor() ([]byte, []int) {
	return file_number_proto_rawDescGZIP(), []int{0}
}

func (x *AddNumberRequest) GetFirst() int32 {
	if x != nil {
		return x.First
	}
	return 0
}

func (x *AddNumberRequest) GetSecond() int32 {
	if x != nil {
		return x.Second
	}
	return 0
}

type AddNumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *AddNumberResponse) Reset() {
	*x = AddNumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_number_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNumberResponse) ProtoMessage() {}

func (x *AddNumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_number_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNumberResponse.ProtoReflect.Descriptor instead.
func (*AddNumberResponse) Descriptor() ([]byte, []int) {
	return file_number_proto_rawDescGZIP(), []int{1}
}

func (x *AddNumberResponse) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type StreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=Question,proto3" json:"Question,omitempty"`
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_number_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_number_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_number_proto_rawDescGZIP(), []int{2}
}

func (x *StreamRequest) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

type StreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Answer string `protobuf:"bytes,1,opt,name=Answer,proto3" json:"Answer,omitempty"`
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_number_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_number_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_number_proto_rawDescGZIP(), []int{3}
}

func (x *StreamResponse) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

var File_number_proto protoreflect.FileDescriptor

var file_number_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22,
	0x2b, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x0e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x32, 0xaf, 0x01, 0x0a, 0x15, 0x4f, 0x70, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x73, 0x79,
	0x6e, 0x63, 0x12, 0x18, 0x2e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x1a, 0x54, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x15, 0x2e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_number_proto_rawDescOnce sync.Once
	file_number_proto_rawDescData = file_number_proto_rawDesc
)

func file_number_proto_rawDescGZIP() []byte {
	file_number_proto_rawDescOnce.Do(func() {
		file_number_proto_rawDescData = protoimpl.X.CompressGZIP(file_number_proto_rawDescData)
	})
	return file_number_proto_rawDescData
}

var file_number_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_number_proto_goTypes = []interface{}{
	(*AddNumberRequest)(nil),  // 0: number.AddNumberRequest
	(*AddNumberResponse)(nil), // 1: number.AddNumberResponse
	(*StreamRequest)(nil),     // 2: number.StreamRequest
	(*StreamResponse)(nil),    // 3: number.StreamResponse
}
var file_number_proto_depIdxs = []int32{
	0, // 0: number.OprationNumberService.AddNumberAsync:input_type -> number.AddNumberRequest
	2, // 1: number.OprationNumberService.TestStreamSendRequestAsync:input_type -> number.StreamRequest
	1, // 2: number.OprationNumberService.AddNumberAsync:output_type -> number.AddNumberResponse
	3, // 3: number.OprationNumberService.TestStreamSendRequestAsync:output_type -> number.StreamResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_number_proto_init() }
func file_number_proto_init() {
	if File_number_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_number_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_number_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_number_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_number_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_number_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_number_proto_goTypes,
		DependencyIndexes: file_number_proto_depIdxs,
		MessageInfos:      file_number_proto_msgTypes,
	}.Build()
	File_number_proto = out.File
	file_number_proto_rawDesc = nil
	file_number_proto_goTypes = nil
	file_number_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OprationNumberServiceClient is the client API for OprationNumberService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OprationNumberServiceClient interface {
	AddNumberAsync(ctx context.Context, in *AddNumberRequest, opts ...grpc.CallOption) (*AddNumberResponse, error)
	TestStreamSendRequestAsync(ctx context.Context, opts ...grpc.CallOption) (OprationNumberService_TestStreamSendRequestAsyncClient, error)
}

type oprationNumberServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOprationNumberServiceClient(cc grpc.ClientConnInterface) OprationNumberServiceClient {
	return &oprationNumberServiceClient{cc}
}

func (c *oprationNumberServiceClient) AddNumberAsync(ctx context.Context, in *AddNumberRequest, opts ...grpc.CallOption) (*AddNumberResponse, error) {
	out := new(AddNumberResponse)
	err := c.cc.Invoke(ctx, "/number.OprationNumberService/AddNumberAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oprationNumberServiceClient) TestStreamSendRequestAsync(ctx context.Context, opts ...grpc.CallOption) (OprationNumberService_TestStreamSendRequestAsyncClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OprationNumberService_serviceDesc.Streams[0], "/number.OprationNumberService/TestStreamSendRequestAsync", opts...)
	if err != nil {
		return nil, err
	}
	x := &oprationNumberServiceTestStreamSendRequestAsyncClient{stream}
	return x, nil
}

type OprationNumberService_TestStreamSendRequestAsyncClient interface {
	Send(*StreamRequest) error
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type oprationNumberServiceTestStreamSendRequestAsyncClient struct {
	grpc.ClientStream
}

func (x *oprationNumberServiceTestStreamSendRequestAsyncClient) Send(m *StreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *oprationNumberServiceTestStreamSendRequestAsyncClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OprationNumberServiceServer is the server API for OprationNumberService service.
type OprationNumberServiceServer interface {
	AddNumberAsync(context.Context, *AddNumberRequest) (*AddNumberResponse, error)
	TestStreamSendRequestAsync(OprationNumberService_TestStreamSendRequestAsyncServer) error
}

// UnimplementedOprationNumberServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOprationNumberServiceServer struct {
}

func (*UnimplementedOprationNumberServiceServer) AddNumberAsync(context.Context, *AddNumberRequest) (*AddNumberResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNumberAsync not implemented")
}
func (*UnimplementedOprationNumberServiceServer) TestStreamSendRequestAsync(OprationNumberService_TestStreamSendRequestAsyncServer) error {
	return status.Errorf(codes.Unimplemented, "method TestStreamSendRequestAsync not implemented")
}

func RegisterOprationNumberServiceServer(s *grpc.Server, srv OprationNumberServiceServer) {
	s.RegisterService(&_OprationNumberService_serviceDesc, srv)
}

func _OprationNumberService_AddNumberAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OprationNumberServiceServer).AddNumberAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/number.OprationNumberService/AddNumberAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OprationNumberServiceServer).AddNumberAsync(ctx, req.(*AddNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OprationNumberService_TestStreamSendRequestAsync_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OprationNumberServiceServer).TestStreamSendRequestAsync(&oprationNumberServiceTestStreamSendRequestAsyncServer{stream})
}

type OprationNumberService_TestStreamSendRequestAsyncServer interface {
	Send(*StreamResponse) error
	Recv() (*StreamRequest, error)
	grpc.ServerStream
}

type oprationNumberServiceTestStreamSendRequestAsyncServer struct {
	grpc.ServerStream
}

func (x *oprationNumberServiceTestStreamSendRequestAsyncServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *oprationNumberServiceTestStreamSendRequestAsyncServer) Recv() (*StreamRequest, error) {
	m := new(StreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _OprationNumberService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "number.OprationNumberService",
	HandlerType: (*OprationNumberServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNumberAsync",
			Handler:    _OprationNumberService_AddNumberAsync_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TestStreamSendRequestAsync",
			Handler:       _OprationNumberService_TestStreamSendRequestAsync_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "number.proto",
}
